apply plugin: 'com.android.application'
apply plugin: 'com.google.ar.sceneform.plugin'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.niccopark"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Sceneform libraries use language constructs from Java 8.
    // Add these compile options if targeting minSdkVersion < 26.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-compat:28.0.0'
    implementation 'com.github.smarteist:autoimageslider:1.2.0'
    implementation 'com.github.bumptech.glide:glide:4.7.1'

    // Provides ARCore Session and related resources.
    implementation 'com.google.ar:core:1.7.0'

    // Provides ArFragment, and other UX resourcs.
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.7.0'

    // Alternatively, use ArSceneView without the UX dependency.
    implementation 'com.google.ar.sceneform:core:1.7.0'
    implementation "com.google.ar.sceneform:animation:1.7.0"
    implementation 'com.android.support:support-v4:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:28.0.0'
}


sceneform.asset('sampledata/ferris_wheel/ferris_wheel.fbx',
        'default',
        'sampledata/ferris_wheel/ferris_wheel.sfa',
        'src/main/assets/ferris_wheel')

sceneform.asset('sampledata/andy/Andy.obj',
        'default',
        'sampledata/andy/Andy.sfa',
        'src/main/assets/Andy')

sceneform.asset('sampledata/iron_man_two/iron_man.obj',
        'default',
        'sampledata/iron_man_two/iron_man.sfa',
        'src/main/assets/iron_man')

sceneform.asset('sampledata/hulk/Hulk-1.obj',
        'default',
        'sampledata/hulk/Hulk-1.sfa',
        'src/main/assets/Hulk-1')

sceneform.asset('sampledata/thanos/model.obj',
        'default',
        'sampledata/thanos/model.sfa',
        'src/main/assets/model')

sceneform.asset('sampledata/hulk/Hulk-1.FBX',
        'default',
        'sampledata/hulk/Hulk-1.sfa',
        'src/main/assets/hulk_anim')

sceneform.asset('sampledata/ferris_wheel/ferris_wheel.fbx',
        'default',
        'sampledata/ferris_wheel/ferris_wheel.sfa',
        'src/main/assets/ferris_wheel_anim')

sceneform.asset('sampledata/hulk/jumping.fbx',
        'default',
        'sampledata/hulk/jumping.sfa',
        'src/main/assets/jumping')

sceneform.asset('sampledata/iron_man_two/Aerial Evade.fbx',
        'default',
        'sampledata/iron_man_two/Aerial Evade.sfa',
        'src/main/assets/aerial_evade')
